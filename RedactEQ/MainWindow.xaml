<Window x:Class="RedactEQ.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RedactEQ"
        xmlns:videotools="clr-namespace:VideoTools"
        xmlns:wpftools="clr-namespace:WPFTools"
        mc:Ignorable="d"
        Closing="Window_Closing"
        Icon="Images/Logo.png"
        Title="Equature Redaction Tool" Height="500" Width="825">

    <Window.Resources>
        <local:BoolToVisibilityConverter x:Key="boolConverter"/>
    </Window.Resources>

    <Grid x:Name="MainContainerGrid">
        
    <Grid x:Name="MainGrid" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem x:Name="Menu_File_Open" Header="_Open" Click="Menu_File_Open_Click"/>
                <MenuItem x:Name="Menu_File_Export" Header="_Export Redacted Video" Click="Menu_File_Export_Click"/>
                <Separator />
                <MenuItem x:Name="Menu_File_LoadDNN" Header="Load Neural Net" Click="Menu_File_LoadDNN_Click"/>
                <Separator/>
                <MenuItem x:Name="Menu_File_Exit" Header="_Exit" Click="Menu_File_Exit_Click"/>
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem x:Name="Menu_Edit_ClearEditsDB" Header="Clear ALL Edits" Click="Menu_Edit_ClearEditsDB_Click"/>
                    <Separator/>
                    <MenuItem x:Name="Menu_Edit_NMS_ALL_DB" Header="Remove ALL Overlapping Redactions" Click="Menu_Edit_NMS_ALL_DB_Click"/>
                </MenuItem>
            </Menu>


            <!-- This Border is the Busy Overlay -->
            <Border Grid.Row="1" BorderBrush="Black" BorderThickness="1" Panel.ZIndex="10"
                    Visibility="{Binding isBusy, Converter={StaticResource boolConverter}}" Grid.RowSpan="3">
                <Border.Background>
                    <SolidColorBrush Color="WhiteSmoke" Opacity="0.5"/>
                </Border.Background>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="48"/>
                        <RowDefinition Height="64"/>
                    </Grid.RowDefinitions>
                    <wpftools:Spinner EllipseSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Margin="0,0,10,5" Height="96" Width="96"/>

                    <TextBlock Grid.Row="1" Margin="0" TextWrapping="Wrap" Text="{Binding messageToUser}" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" 
                               FontSize="24" FontWeight="Bold" Foreground="Black"/>
                </Grid>
            </Border>



            <Grid Grid.Row="1" x:Name="Row_1_Controls_Grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>



            <GroupBox Grid.Column="0" x:Name="Detect_GroupBox" Width="200" Height="70" Header="Detector" 
                      HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" x:Name="Detect_CurrentImage_PB" Width="40" Height="32" 
                            IsEnabled="{Binding detector_detectPB_isEnabled}"
                            Content="Detect" Margin="4" Click="Detect_CurrentImage_PB_Click"/>
                    <Button Grid.Column="1" x:Name="Detect_Run_PB" Width="40" Height="32" 
                            IsEnabled="{Binding detector_runPB_isEnabled}"
                            Content="Run" Margin="4" Click="Detect_Run_PB_Click"/>
                    <Button Grid.Column="2" x:Name="Detect_Pause_PB" Width="40" Height="32" 
                            IsEnabled="{Binding detector_pausePB_isEnabled}"
                            Content="Pause" Margin="4" Click="Detect_Pause_PB_Click"/>
                    </Grid>
            </GroupBox>

            <GroupBox Grid.Column="1" x:Name="Track_GroupBox" Width="200" Height="70" Header="Track"
                      HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ToggleButton Grid.Column="0" x:Name="Track_Enable_RegionPick_PB" IsThreeState="False" 
                                  IsChecked="{Binding trackingEnabled}" Width="24" Height="24"
                                  Margin="8,1,8,1"
                                  IsEnabled="{Binding track_enable_tracking_ToggleButton_isEnabled}"
                                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                                  Checked="Track_Enable_RegionPick_PB_Checked"
                                  Unchecked="Track_Enable_RegionPick_PB_Unchecked">
                        <ToggleButton.Content>
                            <Image Source="Images/target.png" Width="16" Height="16" />
                        </ToggleButton.Content>
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="Red" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>

                    </ToggleButton>
                    <Button Grid.Column="1" x:Name="Track_ForwardOneImage_PB" Width="40" Height="32"
                            IsEnabled="{Binding track_stepPB_isEnabled}"
                            Content="Step" Margin="4" Click="Track_ForwardOneImage_PB_Click">
                    </Button>
                    <Button Grid.Column="2" x:Name="Track_Run_PB" Width="40" Height="32" 
                            IsEnabled="{Binding track_runPB_isEnabled}"
                            Content="Run" Margin="4" Click="Track_Run_PB_Click">
                    </Button>
                    <Button Grid.Column="3" x:Name="Track_Stop_PB" Width="40" Height="32" 
                        IsEnabled="{Binding track_stopPB_isEnabled}"
                        Content="Stop" Margin="4" Click="Track_Stop_PB_Click">
                    </Button>
                    </Grid>
            </GroupBox>

            <GroupBox Grid.Column="2" x:Name="Player_GroupBox" Width="200" Height="70" Header="Player"
                      HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" x:Name="Player_Play_PB" Width="40" Height="32" 
                            IsEnabled="{Binding player_playPB_isEnabled}"
                            Content="Play" Margin="4" Click="Player_Play_PB_Click"/>
                        <Button Grid.Column="1" x:Name="Player_Pause_PB" Width="40" Height="32" 
                            IsEnabled="{Binding player_pausePB_isEnabled}"
                            Content="Pause" Margin="4" Click="Player_Pause_PB_Click"/>
                </Grid>
            </GroupBox>

                <GroupBox Grid.Column="3" x:Name="DisplayMode_GroupBox" Width="200" Height="70" Header="Display Mode"
                        IsEnabled="{Binding display_mode_GroupBox_isEnabled}">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel.Resources>
                            <wpftools:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
                        </StackPanel.Resources>
                        <RadioButton x:Name="Display_Mode_Original" Content="Original" Checked="Display_Mode_Original_Checked" 
                            IsChecked = "{Binding Path=displayMode, 
                            Converter={StaticResource EnumToBooleanConverter}, 
                            ConverterParameter={x:Static local:DisplayMode.ORIGINAL}}"/>
                        <RadioButton x:Name="Display_Mode_Boxes" Content="Boxes" Checked="Display_Mode_Boxes_Checked"
                            IsChecked = "{Binding Path=displayMode, 
                            Converter={StaticResource EnumToBooleanConverter}, 
                            ConverterParameter={x:Static local:DisplayMode.BOXES}}"/>
                        <RadioButton x:Name="Display_Mode_Redacted" Content="Redacted" Checked="Display_Mode_Redacted_Checked"
                            IsChecked = "{Binding Path=displayMode, 
                            Converter={StaticResource EnumToBooleanConverter}, 
                            ConverterParameter={x:Static local:DisplayMode.REDACTED}}"/>
                    </StackPanel>
                </GroupBox>

            </Grid>

        <Grid Grid.Row="2" x:Name="Row_2_Display_Grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="150"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="32"/>
            </Grid.RowDefinitions>

            <Grid x:Name="Display_Grid" Grid.Column="0" Grid.Row="0" Background="Black" MouseWheel="Display_Grid_MouseWheel">
                <Image x:Name="ImageDisplay" Stretch="Uniform" Source="{Binding imageDisplay}"/>
                <Image x:Name="ImageOverlay" Stretch="Uniform"  Source="{Binding imageOverlay}"
                               MouseLeftButtonDown="ImageOverlay_MouseLeftButtonDown"
                               MouseLeftButtonUp="ImageOverlay_MouseLeftButtonUp"
                               MouseLeave="ImageOverlay_MouseLeave"
                               MouseMove="ImageOverlay_MouseMove"
                               MouseRightButtonUp="ImageOverlay_MouseRightButtonUp"
                               />
            </Grid>

            <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" HorizontalAlignment="Stretch"/>

            <ListView x:Name="FrameEditsListBox" Grid.Column="2" Grid.Row="0" ItemsSource="{Binding redactions}" 
                                  IsEnabled="{Binding frame_edits_ListBox_isEnabled}"
                                  SelectionChanged="FrameEditsListBox_SelectionChanged"
                                  SelectedItem="{Binding selectedRedaction}">
                <ListView.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding Path=deleteRedactionCommand}"></KeyBinding>
                </ListView.InputBindings>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding box.x1}"/>
                            <TextBlock Text=","/>
                            <TextBlock Text="{Binding box.y1}"/>
                            <TextBlock Text=","/>
                            <TextBlock Text="{Binding box.x2}"/>
                            <TextBlock Text=","/>
                            <TextBlock Text="{Binding box.y2}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <videotools:VideoNavigator Grid.Column="0" Grid.Row="1" x:Name="videoNavigator"
                        IsEnabled="{Binding videoNavigator_isEnabled}"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

            <Grid x:Name="EditList_Controls_Grid" Grid.Column="2" Grid.Row="1" >
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="NmsPB" Width="24" Height="24" Margin="20,0,20,0" Click="NmsPB_Click"
                                 IsEnabled="{Binding ElementName=FrameEditsListBox, Path=Items.Count}"
                                >
                            <Button.Content>
                                <Image Source="Images/nms.png"/>
                            </Button.Content>
                        </Button>
                        <Button x:Name="DeleteRedactionPB" Width="24" Height="24" Margin="20,0,20,0" Click="DeleteRedactionPB_Click"
                                IsEnabled="{Binding ElementName=FrameEditsListBox, Path=SelectedItems.Count}"
                                >
                            <Button.Content>
                                <Image Source="Images/garbage.png"/>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </Grid>


            <Grid Grid.Column="0" Grid.Row="1" x:Name="InfoAndNavButtons_Grid" HorizontalAlignment="Right" Margin="0,23.5,0,0.5" Grid.RowSpan="2" Width="665">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" x:Name="Filename_TextBlock" Width="Auto" Margin="10,0,10,0"
                           Text="{Binding mp4Filename_DisplayName}"
                           HorizontalAlignment="Left" VerticalAlignment="Center"/>

                <Grid Grid.Column="1" x:Name="NavigationButton_Grid" Width="Auto" Margin="10,0,10,0"
                      HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" x:Name="Nav_Goto_Start_PB" Width="24" Height="24" Margin="8,0,8,0" Visibility="Collapsed"
                            IsEnabled="{Binding nav_goto_startPB_isEnabled}"
                            Click="Nav_Goto_Start_PB_Click">
                        <Button.Content>
                            <Image Source="/Images/goto_start.png"/>
                        </Button.Content>
                    </Button>
                        <Button Grid.Column="1" x:Name="Nav_Pause_PB" Width="24" Height="24"  Margin="8,0,8,0" Visibility="Collapsed"
                            IsEnabled="{Binding nav_pausePB_isEnabled}"
                            Click="Nav_Pause_PB_Click">
                        <Button.Content>
                            <Image Source="/Images/pause.png"/>
                        </Button.Content>
                    </Button>
                        <Button Grid.Column="2" x:Name="Nav_Goto_End_PB" Width="24" Height="24"  Margin="8,0,8,0" Visibility="Collapsed"
                            IsEnabled="{Binding nav_goto_endPB_isEnabled}"
                            Click="Nav_Goto_End_PB_Click">
                        <Button.Content>
                            <Image Source="/Images/goto_end.png"/>
                        </Button.Content>
                    </Button>
                </Grid>

                <TextBlock Grid.Column="2" x:Name="Timestamp_TextBlock" Width="Auto" Margin="10,0,10,0"
                           Text="{Binding timestampStr}" 
                           HorizontalAlignment="Right" VerticalAlignment="Center"/>

            </Grid>

            <TextBlock Grid.Column="2" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding messageToUser}"/>

        </Grid>


    </Grid>

        
    </Grid>



</Window>
